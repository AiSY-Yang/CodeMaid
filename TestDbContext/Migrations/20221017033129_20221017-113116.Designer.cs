// <auto-generated />
using System;
using MaidContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaidContexts.Migrations
{
    [DbContext(typeof(MaidContext))]
    [Migration("20221017033129_20221017-113116")]
    partial class _20221017113116
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Models.DbContext.ClassDefinition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Base")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("NameSpaceDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("NameSpaceDefinitionId");

                    b.ToTable("ClassDefinitions");
                });

            modelBuilder.Entity("Models.DbContext.NameSpaceDefinition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("NameSpaceDefinitions");
                });

            modelBuilder.Entity("Models.DbContext.PropertyDefinition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClassDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<string>("FullText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Get")
                        .HasColumnType("longtext");

                    b.Property<string>("Initializer")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LeadingTrivia")
                        .HasColumnType("longtext");

                    b.Property<string>("Modifiers")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Set")
                        .HasColumnType("longtext");

                    b.Property<string>("Summary")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ClassDefinitionId");

                    b.ToTable("FieldDefinitions");
                });

            modelBuilder.Entity("Models.DbContext.ClassDefinition", b =>
                {
                    b.HasOne("Models.DbContext.NameSpaceDefinition", "NameSpaceDefinition")
                        .WithMany("Classes")
                        .HasForeignKey("NameSpaceDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NameSpaceDefinition");
                });

            modelBuilder.Entity("Models.DbContext.PropertyDefinition", b =>
                {
                    b.HasOne("Models.DbContext.ClassDefinition", "ClassDefinition")
                        .WithMany("Properties")
                        .HasForeignKey("ClassDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassDefinition");
                });

            modelBuilder.Entity("Models.DbContext.ClassDefinition", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Models.DbContext.NameSpaceDefinition", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
